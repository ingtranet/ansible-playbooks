version: "3.9"

services:
  caddy:
    container_name: caddy
    image: ingtranet/caddy:2.6.4
    restart: always
    environment:
      "ACME_EMAIL": "{{ secret_acme_email }}"
      "CLOUDFLARE_TOKEN": "{{ secret_cloudflare_token }}"
    volumes:
      - type: bind
        source: "{{ config_path }}/{{ item }}/caddy/Caddyfile"
        target: /etc/caddy/Caddyfile
      - type: bind
        source: /volume1/docker/caddy
        target: /data/caddy
    networks:
      vlan365:
        ipv4_address: 10.3.65.11

  seaweedfs:
    container_name: seaweedfs
    image: harbor.ingtra.net/docker.io/chrislusf/seaweedfs:3.73_large_disk
    command: server -master.volumeSizeLimitMB 20000 -volume.max 1000 -options /etc/seaweedfs/options
    restart: always
    volumes:
      - type: bind
        source: /volume1/seaweedfs/config
        target: /etc/seaweedfs
      - type: bind
        source: /volume1/seaweedfs/data
        target: /data
    networks:
      vlan365:
        ipv4_address: 10.3.65.12

  # victoria-metrics:
  #   container_name: victoria-metrics
  #   image: harbor.ingtra.net/docker.io/victoriametrics/victoria-metrics:v1.103.0
  #   restart: always
  #   volumes:
  #     - type: bind
  #       source: /volume1/docker/victoria-metrics/data
  #       target: /victoria-metrics-data
  #   networks:
  #     vlan365:
  #       ipv4_address: 10.3.65.13

  # postgresql:
  #   container_name: postgresql
  #   image: harbor.ingtra.net/docker.io/library/postgres:16.4
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: "{{ secret_postgresql_password }}"
  #     POSTGRES_INITDB_ARGS: "-E UTF8"
  #   volumes:
  #     - type: bind
  #       source: /volume1/docker/postgresql/data
  #       target: /var/lib/postgresql/data
  #     - type: bind
  #       source: /volume1/docker/postgresql/conf/postgresql.conf
  #       target: /etc/postgresql/postgresql.conf
  #   networks:
  #     vlan365:
  #       ipv4_address: 10.3.65.14

  # redpanda:
  #   container_name: redpanda
  #   image: harbor.ingtra.net/docker.io/redpandadata/redpanda:v24.1.16
  #   restart: always
  #   command:
  #     - redpanda
  #     - start
  #     - --mode dev-container
  #   volumes:
  #     - type: bind
  #       source: /volume1/docker/redpanda/data
  #       target: /var/lib/redpanda/data
  #   networks:
  #     vlan365:
  #       ipv4_address: 10.3.65.15

  # redpanda-console:
  #   container_name: redpanda-console
  #   image: harbor.ingtra.net/docker.io/redpandadata/console:v2.7.2
  #   restart: always
  #   entrypoint: /bin/sh
  #   command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
  #   environment:
  #     CONFIG_FILEPATH: /tmp/config.yml
  #     CONSOLE_CONFIG_FILE: |
  #       kafka:
  #         brokers: ["redpanda.sd.ingtra.net:9092"]
  #         schemaRegistry:
  #           enabled: true
  #           urls: ["http://redpanda.sd.ingtra.net:8081"]
  #       redpanda:
  #         adminApi:
  #           enabled: true
  #           urls: ["http://redpanda.sd.ingtra.net:9644"]
  #   networks:
  #     vlan365:
  #       ipv4_address: 10.3.65.16

  # mongodb:
  #   container_name: mongodb
  #   image: harbor.ingtra.net/docker.io/mongo:7.0.5
  #   restart: always
  #   command:
  #     - --wiredTigerCollectionBlockCompressor=zstd
  #   volumes:
  #     - type: bind
  #       source: /volume1/docker/mongodb/data
  #       target: /data
  #   networks:
  #     vlan365:
  #       ipv4_address: 10.3.65.17

networks:
  vlan365:
    name: vlan365
    driver: macvlan
    driver_opts:
      parent: ovs_vlan365
    enable_ipv6: false
    ipam:
      config:
        - subnet: 10.3.65.0/24
          ip_range: 10.3.65.0/24
          gateway: 10.3.65.1